- name: Copy vm directory structure
  copy:
    src: files/vm
    dest: /

- name: Install packages
  pacman:
    name: "{{item}}"
    state: present
  with_items:
    - base-devel
    - bridge-utils
    - qemu
    - libvirt
    - libvirt-python
    - dhcp
    - tftp-hpa
    - nginx
    - syslinux
    - squashfs-tools
    - openbsd-netcat


- name: Configure iptables
  iptables:
    table: nat
    chain: POSTROUTING
    out_interface: "{{ansible_default_ipv4.interface}}"
    jump: MASQUERADE
    state: present

- name: Configure sysctl
  shell: sysctl net.ipv4.ip_forward=1

- name: Configure cluster bridge
  template:
    src: "templates/{{item}}.j2"
    dest: "/etc/systemd/network/{{item}}"
  with_items:
    - cluster.netdev
    - cluster.network

- name: Make hostname
  template:
    src: templates/hostname.j2
    dest: "/etc/hostname"
  with_items:
    - "{{inventory_hostname}}"

- name: Configure dhcpd.conf
  lineinfile:
    path: /etc/dhcpd.conf
    line: 'include "/etc/dhcpd-virt.conf";'

- name: Configure dhcpd4
  template:
    src: templates/dhcpd4.conf.j2
    dest: /etc/dhcpd-virt.conf

- name: Make nginx dirs
  file:
    path: "{{item}}"
    state: directory
  with_items:
    - /etc/nginx/sites
    - /etc/nginx/intra

- name: Configure nginx generic
  copy:
    src: files/nginx.conf
    dest: /etc/nginx/nginx.conf

- name: Configure libvirt qemu.conf
  copy:
    src: files/qemu.conf
    dest: /etc/libvirt/qemu.conf

- name: Configure nginx cluster
  template:
    src: templates/nginx-cluster.j2
    dest: /etc/nginx/sites/00-cluster

- name: Configure nginx intra
  template:
    src: templates/nginx-intra.j2
    dest: /etc/nginx/sites/01-intra

- name: Nginx add tftp endpoint
  copy:
    src: files/nginx-intra-tftp.conf
    dest: /etc/nginx/intra/tftp

- name: Ensure ssh key present
  become: false
  shell: ssh-keygen -t rsa -f ~/.ssh/id_rsa -N "" || true

- name: Slurp public ssh key
  become: false
  slurp: 
    src: ~/.ssh/id_rsa.pub
  register: pub

- name: Copy authorized_keys
  become: false
  shell: true && sudo cp ~/.ssh/authorized_keys /vm/keys/authorized_keys

- name: Ensure public key authorized
  lineinfile:
    path: /vm/keys/authorized_keys
    line: "{{pub.content | b64decode | regex_replace('\\s*$', '')}}"

- name: Configure ssh host CA
  shell: ssh-keygen -t rsa -f /vm/secret/host_ca -N "" || true

- name: Configure tftpd
  copy:
    src: files/tftpd.conf
    dest: /etc/conf.d/tftpd

- name: Build pool
  shell: virsh pool-create-as vmpool dir --target /vm/images --build || true

- name: Hackfix
  shell: "ip addr add {{hostvars[inventory_hostname].net | ipaddr('1')}} dev cluster0 || true"

- name: Start services
  systemd:
    name: "{{item}}"
    enabled: true
    state: restarted
  with_items:
    - systemd-networkd
    - systemd-resolved
    - sshd
    - libvirtd
    - libvirt-guests
    - tftpd
    - nginx
    - dhcpd4
